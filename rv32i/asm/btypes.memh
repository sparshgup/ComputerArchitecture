00a00093 // PC=0x0 line=1: addi x1, x0, 10     # x01 = 10
ff600113 // PC=0x4 line=2: addi x2, x0, -10    # x02 = -10
00500193 // PC=0x8 line=3: addi x3, x0, 5      # x03 = 5
00000463 // PC=0xc line=7: beq x0, x0, equal                   # testing equal
001f8f93 // PC=0x10 line=8: addi x31, x31, 1
00100293 // PC=0x14 line=10: addi x5, x0, 1
00009463 // PC=0x18 line=12: bne x1, x0, not_equal               # testing not equal
001f8f93 // PC=0x1c line=13: addi x31, x31, 1
00200313 // PC=0x20 line=15: addi x6, x0, 2
0020c463 // PC=0x24 line=17: blt x1, x2, less_than               # testing less than
001f8f93 // PC=0x28 line=18: addi x31, x31, 1
00300393 // PC=0x2c line=20: addi x7, x0, 3
0030d463 // PC=0x30 line=22: bge x1, x3, greater_than            # testing greater than
001f8f93 // PC=0x34 line=23: addi x31, x31, 1
00400413 // PC=0x38 line=25: addi x8, x0, 4
0011e463 // PC=0x3c line=27: bltu x3, x1, less_than_unsigned     # testing less than less_than_unsigned
001f8f93 // PC=0x40 line=28: addi x31, x31, 1
00500493 // PC=0x44 line=30: addi x9, x0, 5
0030f463 // PC=0x48 line=32: bgeu x1, x3, greater_than_unsigned  # testing greater than unsigned
001f8f93 // PC=0x4c line=33: addi x31, x31, 1
00600513 // PC=0x50 line=35: addi x10, x0, 6
00000063 // PC=0x54 line=37: infinite_loop: beq x0, x0, infinite_loop
